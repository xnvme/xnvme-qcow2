---
  name: build_qcow2
  
  on:
    workflow_dispatch:
      inputs:
        xnvme_repos_ref:
          description: 'Branch, tag, or ref of xNVMe repository'
          required: true
          default: 'main'
  
  jobs:
    source-archive-with-subprojects:
      runs-on: ubuntu-latest
      container: ghcr.io/xnvme/xnvme-deps-alpine-latest:next

      steps:
      - name: Grab source
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ vars.XNVME_REPOS_NAME }}
          submodules: 'recursive'
          fetch-depth: 0
          ref: ${{ inputs.xnvme_repos_ref }}

      - name: Add repos to git-config safe.directory
        run: |
          git config --global --add safe.directory $(pwd)

      - name: Check repository...
        run: |
          ls -lha
          git status

      - name: Generate Source Archive
        run: |
          make clean gen-src-archive-with-subprojects

      - name: Rename to un-versioned xnvme-src.tar.gz
        run: |
          mv builddir/meson-dist/xnvme-0.7.5.tar.gz builddir/meson-dist/xnvme-src.tar.gz
          mv builddir/meson-dist/xnvme-0.7.5.tar.gz.sha256sum builddir/meson-dist/xnvme-src.tar.gz.sha256sum

      - name: Upload source archive
        uses: actions/upload-artifact@v4.3.0
        with:
          name: xnvme-src-archive-with-subprojects
          path: |
            builddir/meson-dist/xnvme-src.tar.gz.sha256sum
            builddir/meson-dist/xnvme-src.tar.gz
          if-no-files-found: error


    build-qcow:
      needs: source-archive-with-subprojects
      runs-on: ubuntu-latest
      container:
        image: ghcr.io/xnvme/xnvme-qemu:latest
        options: --privileged

      strategy:
        matrix:
          image:
          - { os: "debian", ver: "bullseye" }
          - { os: "freebsd", ver: "14" }

      concurrency:
        group: build-qcow2
        cancel-in-progress: false

      steps:
      - uses: xnvme/actions/.github/actions/cleanup@main

      - name: Retrieve and unpack the xNVMe source archive
        uses: xnvme/actions/.github/actions/setup-source@main
        id: source
        with:
          name: xnvme-src-archive-with-subprojects

      - name: Install python-venv
        run: |
          apt-get install -qy python3-venv
  
      - name: pipx, Install
        run: |
          python3 -m pip list
          python3 -m pip install pipx
          python3 -m pip install boto3 botocore

      - name: Setup CIJOE and pipx
        run: |
          make cijoe
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Checkout CI repository
        uses: actions/checkout@v4.1.7
        with:
          path: ci
      
      - name: Get FreeBSD image
        if: matrix.image.os == 'freebsd'
        run: |
          rm -rf $HOME/images
          mkdir -p "$HOME/images/boot_images/"
          cd "$HOME/images/boot_images/"
          wget https://download.freebsd.org/releases/CI-IMAGES/14.1-RELEASE/amd64/Latest/FreeBSD-14.1-RELEASE-amd64-BASIC-CI.raw.xz
          xz --decompress FreeBSD-14.1-RELEASE-amd64-BASIC-CI.raw.xz
          qemu-img convert FreeBSD-14.1-RELEASE-amd64-BASIC-CI.raw FreeBSD-14.1-RELEASE-amd64-BASIC-CI.qcow2 -O qcow2

      - name: Build
        run: |
          cd cijoe && cijoe \
          workflows/bootimg-${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64.yaml \
          -m -l \
          --config configs/${{ matrix.image.os }}-${{ matrix.image.ver }}.toml

      - name: Upload CIJOE report
        uses: actions/upload-artifact@v4.4.0
        if: always()
        with:
          path: cijoe/cijoe-output
          name: cloudinit-report-${{ matrix.image.os }}-${{ matrix.image.ver }}

      - name: Change image format and compress
        run: |
          ls -lha $HOME/guests/${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64/
          for i in $(seq 1 60); do test -f "$HOME/guests/${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64/guest.pid" || break; sleep 1; done
          ls -lha $HOME/guests/${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64/
          qemu-img convert $HOME/guests/${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64/boot.img ${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64.qcow2 -O qcow2 -c
          ls -lha ${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64.qcow2

      - name: Transfer to  storage box
        env:
          USERNAME: ${{ secrets.STORAGEBOX_QCOW_IMAGES_USERNAME }}
          PASSWORD: ${{ secrets.STORAGEBOX_QCOW_IMAGES_PASSWORD }}
          FILE: ${{ matrix.image.os }}-${{ matrix.image.ver }}-amd64.qcow2
        run : |
          sshpass -p ${PASSWORD} \
            scp ${FILE} ${USERNAME}@${USERNAME}.your-storagebox.de:/public/${FILE}
